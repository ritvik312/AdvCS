#BlueJ class context
comment0.target=IStack
comment0.text=\r\n\ Defines\ common\ Stack\ methods.\r\n\ \r\n\ @author\ Gerald\ Page\ \r\n\ @version\ 1\r\n
comment1.params=value
comment1.target=void\ push(double)
comment1.text=\r\n\ The\ push\ method\ should\ verify\ there\ is\ space\ on\ the\ stack\ before\r\n\ \ \ \ \ \ taking\ action.\ If\ stack\ is\ full,\ push\ does\ nothing.\r\n\ \ \ \ \ \ \r\n\ @param\ \ y\ \ \ \ the\ double\ value\ to\ be\ pushed\ on\ the\ stack\r\n
comment2.params=
comment2.target=double\ pop()
comment2.text=\r\n\ The\ pop\ method\ should\ verify\ there\ is\ a\ valid\ value\ on\ the\ stack\r\n\ \ \ \ \ \ before\ taking\ action.\ \r\n\ Removes\ and\ returns\ the\ value\ on\ the\ top\ of\ the\ stack.\r\n\ If\ stack\ is\ empty,\ pop\ returns\ zero.\r\n\ \r\n\ @return\ \ the\ value\ from\ the\ top\ of\ the\ stack\ \r\n
comment3.params=
comment3.target=double\ peek()
comment3.text=\r\n\ The\ peek\ method\ should\ verify\ there\ is\ a\ valid\ value\ on\ the\ stack\r\n\ \ \ \ \ \ before\ taking\ action.\ \r\n\ Returns\ the\ value\ on\ the\ top\ of\ the\ stack.\r\n\ If\ the\ stack\ is\ empty,\ peek\ returns\ zero.\r\n\ \r\n\ @return\ \ the\ value\ from\ the\ top\ of\ the\ stack\r\n
comment4.params=
comment4.target=int\ size()
comment4.text=\r\n\ Returns\ the\ number\ of\ values\ on\ the\ stack.\r\n\ \r\n\ @return\ \ \ \ number\ of\ values\ on\ the\ stack\ \r\n
comment5.params=
comment5.target=boolean\ isEmpty()
comment5.text=\r\n\ Returns\ true\ if\ the\ stack\ is\ empty\ &\ false\ otherwise\r\n\ \r\n\ @return\ \ \ \ \ true\ if\ no\ values\ are\ stored\ on\ the\ stack,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ false\ otherwise\r\n
comment6.params=
comment6.target=boolean\ isFull()
comment6.text=\r\n\ Returns\ true\ if\ the\ stack\ is\ full\ &\ false\ otherwise\r\n\ \r\n\ @return\ \ \ \ \ true\ if\ no\ more\ values\ will\ fit\ on\ the\ stack,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ false\ otherwise\r\n
comment7.params=
comment7.target=void\ clear()
comment7.text=\r\n\ Places\ the\ stack\ in\ an\ empty\ condition\ \r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Returns\ a\ formatted\ string\ of\ the\ stack's\ logical\ contents.\r\n\ \r\n\ @return\ \ \ \ \ logical\ stack\ contents\ as\ a\ string\r\n
comment9.params=
comment9.target=java.lang.String\ ArrayToString()
comment9.text=\r\n\ Returns\ a\ formatted\ string\ of\ the\ underlying\ array\ contents.\r\n\ \r\n\ @return\ \ \ \ \ array\ contents\ as\ a\ string\r\n
numComments=10
